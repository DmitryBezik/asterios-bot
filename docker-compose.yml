version: '3'

services:
  web:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    container_name: 'asterios-bot-web'
    restart: always
    ports:
      - "8080:80"
    volumes:
      - .:/app/
    links:
      - php
    networks:
      - tier

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: 'asterios-bot-php'
    restart: always
    volumes:
      - .:/app/
    links:
      - mysql
      - redis
    networks:
      - tier

  worker:
    build:
      context: .
      dockerfile: docker/worker/Dockerfile
    container_name: 'asterios-bot-worker'
    restart: always
    volumes:
      - .:/app/
    links:
      - mysql
      - redis
    networks:
      - tier

  mysql:
    image: mysql:5.7.22
    container_name: 'telegram-bots-mysql'
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: asterios
      MYSQL_ROOT_PASSWORD: password
      MYSQL_ROOT_HOST: '%'
#    volumes:
#      - ./docker/sql/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    networks:
      - tier

  redis:
    container_name: 'telegram-bots-redis'
    image: redis:3.2
    restart: always
    ports:
      - "127.0.0.1:6379:6379/tcp"
    networks:
      - tier

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: 'telegram-bots-pma'
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: password
    ports:
      - '8006:80'
    networks:
      - tier

networks:
  tier:
    external:
      name: telegram-bots-network